<?php

namespace AppBundle\Entity;

use AppBundle\Model\Raster as RasterObject;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * RasterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RasterRepository extends EntityRepository
{

    /**
     * @param Raster $raster
     * @return bool
     * @throws \Doctrine\DBAL\DBALException
     */
    public function setEmptyRaster(Raster $raster)
    {
        /** @var RasterObject $rasterObj */
        $rasterObj = $raster->getRaster();

        $tableName = $this->getEntityManager()->getClassMetadata('AppBundle:Raster')->getTableName();

        $sql = "
            UPDATE ".$tableName."
            SET rast = ST_MakeEmptyRaster(
                ".$rasterObj->getWidth().",
                ".$rasterObj->getHeight().",
                ".$rasterObj->getUpperLeftX().",
                ".$rasterObj->getUpperLeftY().",
                ".$rasterObj->getScaleX().",
                ".$rasterObj->getScaleY().",
                ".$rasterObj->getSkewX().",
                ".$rasterObj->getSkewY().",
                ".$rasterObj->getSrid()."
            )
            WHERE id = ".$raster->getId()."
        ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        //return $stmt->fetchAll();
        return true;
    }

    /**
     * @param Raster $raster
     * @return bool
     * @throws \Doctrine\DBAL\DBALException
     */
    public function setEmptyRasterAndAddBand(Raster $raster)
    {
        /** @var RasterObject $rasterObj */
        $rasterObj = $raster->getRaster();
        $tableName = $this->getEntityManager()->getClassMetadata('AppBundle:Raster')->getTableName();

        $this->setEmptyRaster($raster);

        $sql = "
            UPDATE ".$tableName."
            SET rast = st_addband(
                rast,
                ARRAY[
	            	ROW(
	            	    ".$rasterObj->getBand()->getId().",
                        ".$rasterObj->getBand()->getPixelType().",
                        ".$rasterObj->getBand()->getInitValue().",
                        ".$rasterObj->getBand()->getNoDataVal()."
                    )
			    ]::addbandarg[]
            )
            WHERE id = ".$raster->getId()."
        ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        //return $stmt->fetchAll();
        return true;
    }

    /**
     * @param Raster $raster
     * @return bool
     * @throws \Doctrine\DBAL\DBALException
     */
    public function addDataToRaster(Raster $raster)
    {

        /** @var RasterObject $rasterObj */
        $rasterObj = $raster->getRaster();

        $tableName = $this->getEntityManager()
            ->getClassMetadata('AppBundle:Raster')
            ->getTableName();

        $this->setEmptyRasterAndAddBand($raster);

        $sql = "
            UPDATE ".$tableName."
            SET rast = ST_SetValues(
                rast,
                ".$rasterObj->getBand()->getId().",
                1,
                1,
                ".$this->conversionArrayToSQL($rasterObj->getBand()->getData())."
            )
            WHERE id = ".$raster->getId()."
        ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        //return $stmt->fetchAll();
        return true;
    }

    /**
     * @return bool
     * @throws \Doctrine\DBAL\DBALException
     */
    public function conversionTestPlainSQL()
    {
        $sql = "
            SELECT st_astext(
              st_transform(
                st_geometryfromtext('POINT (12.9 50.8)', 4326), 900913
              )
            ) as test
        ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        //return $stmt->fetchAll();
        return true;
    }

    /**
     * @return bool
     */
    public function conversionTestDQL($sqlExpr)
    {
        $query = $this->getEntityManager()
            ->createQuery('SELECT '.$sqlExpr.' FROM AppBundle\Entity\Raster');

        $result = $query->getResult();
        return $result;
    }

    /**
     * @param $rows
     * @return string
     */
    private function conversionArrayToSQL($rows)
    {
        //ARRAY[[9, 9], [9, 9]]::double precision[][]

        $value = "";

        if (is_array($rows))
        {
            $value .= 'ARRAY[';
            foreach ($rows as $row)
            {
                $value .= '[';
                $value .= sprintf('%s', implode(",", $row));
                $value .= '],';
            }
            $value = rtrim($value, ",");
            $value .= ']::double precision[][]';
        }

        return $value;
    }
}

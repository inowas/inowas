<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * RasterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RasterRepository extends EntityRepository
{

    /**
     * @param Raster $raster
     * @return array
     * @throws \Doctrine\DBAL\DBALException
     */
    public function setEmptyRaster(Raster $raster)
    {
        $tableName = $this->getEntityManager()->getClassMetadata('AppBundle:Raster')->getTableName();

        $sql = "
            UPDATE ".$tableName."
            SET rast = ST_MakeEmptyRaster(
                ".$raster->getWidth().",
                ".$raster->getHeight().",
                ".$raster->getUpperLeftX().",
                ".$raster->getUpperLeftY().",
                ".$raster->getScaleX().",
                ".$raster->getScaleY().",
                ".$raster->getSkewX().",
                ".$raster->getSkewY().",
                ".$raster->getSrid()."
            )
            WHERE id = ".$raster->getId()."
        ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        return $stmt->fetchAll();
    }

    /**
     * @param Raster $raster
     * @return array
     * @throws \Doctrine\DBAL\DBALException
     */
    public function setEmptyRasterAndAddBand(Raster $raster)
    {
        $tableName = $this->getEntityManager()->getClassMetadata('AppBundle:Raster')->getTableName();

        $this->setEmptyRaster($raster);

        $sql = "
            UPDATE ".$tableName."
            SET rast = st_addband(
                rast,
                ARRAY[
	            	ROW(
	            	    1,
                        ".$raster->getBandPixelType().",
                        ".$raster->getBandInitValue().",
                        ".$raster->getBandNoDataVal()."
                    )
			    ]::addbandarg[]
            )
            WHERE id = ".$raster->getId()."
        ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        return $stmt->fetchAll();
    }

    /**
     * @param Raster $raster
     * @param int $rasterBandId
     * @return array
     * @throws \Doctrine\DBAL\DBALException
     */
    public function addSimpleRasterToRaster(Raster $raster, $rasterBandId = 1)
    {
        $tableName = $this->getEntityManager()->getClassMetadata('AppBundle:Raster')->getTableName();
        $this->setEmptyRasterAndAddBand($raster);

        $sql = "
            UPDATE ".$tableName."
            SET rast = ST_SetValues(rast, ".$rasterBandId.", 1, 1, (select simple_raster))
            WHERE id = ".$raster->getId()."
        ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        return $stmt->fetchAll();
    }

    /**
     * @return array
     * @throws \Doctrine\DBAL\DBALException
     */
    public function conversionTestPlainSQL()
    {
        $sql = "
            SELECT st_astext(
              st_transform(
                st_geometryfromtext('POINT (12.9 50.8)', 4326), 900913
              )
            ) as test
        ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function conversionTestDQL()
    {
        $query = $this->getEntityManager()
            ->createQuery('SELECT st_geomfromtext(\'POINT (12.9 50.8)\', 4326) FROM AppBundle\Entity\Raster');

        $result = $query->getResult();
        return $result;
    }

}

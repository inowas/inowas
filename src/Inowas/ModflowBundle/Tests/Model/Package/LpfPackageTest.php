<?php

namespace Inowas\ModflowBundle\Tests\Model\Package;

use Inowas\ModflowBundle\Model\Package\LpfPackage;

class LpfPackageTest extends \PHPUnit_Framework_TestCase
{

    public function setUp() {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testInstantiate() {
        $lpf = new LpfPackage();
        $this->assertInstanceOf(LpfPackage::class, $lpf);
    }

    public function testDisPackageHasJsonSerializeImplementedAndReturnsJson() {
        $lpf = new LpfPackage();
        $this->assertJson(json_encode($lpf));
    }

    public function testDisPackageProperties() {
        $lpf = new LpfPackage();
        $json = json_encode($lpf);
        $lpfObj = json_decode($json);
        $this->assertObjectHasAttribute('laytyp', $lpfObj);
        $this->assertObjectHasAttribute('layavg', $lpfObj);
        $this->assertObjectHasAttribute('chani', $lpfObj);
        $this->assertObjectHasAttribute('layvka', $lpfObj);
        $this->assertObjectHasAttribute('laywet', $lpfObj);
        $this->assertObjectHasAttribute('ipakcb', $lpfObj);
        $this->assertObjectHasAttribute('hdry', $lpfObj);
        $this->assertObjectHasAttribute('iwdflg', $lpfObj);
        $this->assertObjectHasAttribute('wetfct', $lpfObj);
        $this->assertObjectHasAttribute('iwetit', $lpfObj);
        $this->assertObjectHasAttribute('ihdwet', $lpfObj);
        $this->assertObjectHasAttribute('hk', $lpfObj);
        $this->assertObjectHasAttribute('hani', $lpfObj);
        $this->assertObjectHasAttribute('vka', $lpfObj);
        $this->assertObjectHasAttribute('ss', $lpfObj);
        $this->assertObjectHasAttribute('sy', $lpfObj);
        $this->assertObjectHasAttribute('vkcb', $lpfObj);
        $this->assertObjectHasAttribute('wetdry', $lpfObj);
        $this->assertObjectHasAttribute('storagecoefficient', $lpfObj);
        $this->assertObjectHasAttribute('constantcv', $lpfObj);
        $this->assertObjectHasAttribute('thickstrt', $lpfObj);
        $this->assertObjectHasAttribute('nocvcorrection', $lpfObj);
        $this->assertObjectHasAttribute('novfc', $lpfObj);
        $this->assertObjectHasAttribute('extension', $lpfObj);
        $this->assertObjectHasAttribute('unitnumber', $lpfObj);
    }
}
